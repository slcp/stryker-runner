name: Prep the rocket!

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install packages
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Prettier
        run: yarn prettier:check

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install packages
        run: yarn install --frozen-lockfile

      - name: Unit tests
        run: yarn test:unit

  mutation-tests:
    name: Mutation tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8

      - name: Cache Stryker incremental test ouputÃ˜
        id: cache-stryker-incremental-output
        uses: actions/cache@v4
        env:
          cache-name: stryker-incremental-output
        with:
          path: ${{ github.workspace }}/reports/stryker-incremental.json
          key: ${{ env.cache-name }}-${{ steps.branch-name.outputs.current_branch }}-${{ github.run_id }}
          restore-keys: |
            ${{ env.cache-name }}-${{ steps.branch-name.outputs.current_branch }}-

      - name: Install packages
        run: yarn install --frozen-lockfile

      - name: Mutation tests
        run: yarn test:mutation

  extension-tests:
    # These are expensive so run last and only run multiple OSes on main
    needs: [lint, unit-tests, mutation-tests]
    name: Extension Tests using Development Host
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 3
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install extension packages
        run: yarn install --frozen-lockfile

      - name: Install e2e packages
        run: cd e2e-tests && yarn install --frozen-lockfile

      - name: Start xvfb only if it's Linux
        if: startsWith(matrix.os,'ubuntu')
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo ">>> Started xvfb"
        shell: bash

      - name: Run tests
        run: |
          yarn test:integration
        env:
          DISPLAY: ':99.0' # Only necessary for linux tests
          NODE_UNC_HOST_ALLOWLIST: 'd:' # Only necessary for windows tests

  # Whilst Windows integrations tests are struggling in the pipeline make them non blocking
  # but still try and resolve them.
  extension-tests-windows:
    needs: [lint, unit-tests, mutation-tests]
    name: Extension Tests using Development Host - Windows
    continue-on-error: true
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 3
      matrix:
        os: [windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install extension packages
        run: yarn install --frozen-lockfile

      - name: Install e2e packages
        run: cd e2e-tests && yarn install --frozen-lockfile

      - name: Start xvfb only if it's Linux
        if: startsWith(matrix.os,'ubuntu')
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo ">>> Started xvfb"
        shell: bash

      - name: Run tests
        run: |
          yarn test:integration
        env:
          DISPLAY: ':99.0' # Only necessary for linux tests
          NODE_UNC_HOST_ALLOWLIST: 'd:' # Only necessary for windows tests
